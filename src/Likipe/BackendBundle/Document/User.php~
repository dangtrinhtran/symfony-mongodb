<?php
// src/Likipe/BackendBundle/Document/User.php
namespace Likipe\BackendBundle\Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @MongoDB\Document(collection="Likipe_User", repositoryClass="Likipe\BackendBundle\Repository\UserRepository")
 */
class User implements UserInterface {

	/**
	 * @MongoDB\Id(strategy="auto")
	 */
	private $id;

	/**
	 * @MongoDB\String
	 */
	private $firstname;

	/**
	 * @MongoDB\String
	 */
	private $lastname;

	/**
	 * @MongoDB\String
	 * @Assert\NotBlank()
	 */
	private $username;

	/**
	 * @MongoDB\String
	 */
	private $salt;

	/**
	 * @MongoDB\String
	 * @Assert\NotBlank()
	 */
	private $password;

	/**
	 * @MongoDB\String
	 */
	private $role;

	/**
	 * @MongoDB\String
	 * @Assert\NotBlank()
	 */
	private $email;

	/**
	 * @MongoDB\Boolean
	 */
	private $isActive;

	public function __construct() {
		$this->isActive = true;
		$this->salt = md5(uniqid(null, true));
	}

	/**
	 * @inheritDoc
	 */
	public function getUsername() {
		return $this->username;
	}

	/**
	 * @inheritDoc
	 */
	public function getSalt() {
		return $this->salt;
	}

	/**
	 * @inheritDoc
	 */
	public function getPassword() {
		return $this->password;
	}

	/**
	 * @inheritDoc
	 */
	public function getRoles() {
		return array('ROLE_USER');
	}

	/**
	 * @inheritDoc
	 */
	public function eraseCredentials() {
		
	}

}